{"version":3,"file":"js/233.3adc78c0.js","mappings":"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","sources":["webpack://front/./src/axios/api/notes.ts","webpack://front/./src/views/manage/NotesManage.vue?0002","webpack://front/./src/views/manage/NotesManage.vue","webpack://front/./src/views/manage/NotesManage.vue?00c3"],"sourcesContent":["import { get,post } from '@/axios/axios'\r\n\r\nexport function getNotesManageList(params:any)\r\n{\r\n    return get('/notesManage/getNotesManageList',params)\r\n}\r\n\r\nexport function updateNote(params:any)\r\n{\r\n    return post('/notesManage/updateNote',params)\r\n}\r\n\r\nexport function getNotesListByUser(params:any)\r\n{\r\n    return get('/notes/getNotesListByUser',params)\r\n}\r\n\r\nexport function addNote(params:any)\r\n{\r\n    return post('/notes/addNote',params)\r\n}\r\n\r\nexport function deleteNote(params:any)\r\n{\r\n    return post('/notes/deleteNote',params)\r\n}\r\n\r\nexport function deleteNoteData(params:any)\r\n{\r\n    return post('/notesManage/deleteNoteData',params)\r\n}\r\n\r\nexport function editNote(params:any)\r\n{\r\n    return post('/notes/editNote',params)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"notes-manage-pagination-div\" }\nconst _hoisted_2 = { class: \"notes-manage-drawer-title\" }\nconst _hoisted_3 = { class: \"notes-manage-delete-confirm-div\" }\nconst _hoisted_4 = { class: \"notes-manage-delete-confirm-text\" }\nconst _hoisted_5 = { class: \"notes-manage-delete-confirm-title\" }\n\nimport { ref,onMounted,reactive } from 'vue'\r\nimport { getNotesManageList,updateNote,deleteNoteData } from '@/axios/api/notes';\r\nimport type { FormInstance } from 'element-plus'\r\nimport { ElMessage } from 'element-plus' //element消息\r\nimport i18n from '@/language';\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'NotesManage',\n  setup(__props) {\n\r\nconst { t } = i18n.global\r\n\r\nconst searchInput = ref(\"\") //搜索内容输入\r\nconst tableData = ref([]) //主页面表表格数据\r\nconst page = ref(1) //页数\r\nconst pageTotal = ref(0) //总条数\r\nconst tableHeight = ref((window.innerHeight - 280) + \"px\") //表格高度\r\nconst isEditDrawerOpen = ref(false) //编辑抽屉是否打开\r\nconst isDeleteConfirmDrawerOpen = ref(false) //确认删除的抽屉是否打开\r\nconst notesForm = reactive //接口数据输入\r\n({\r\n    title: \"\",\r\n    text: \"\",\r\n})\r\nconst notesFormRef = ref<FormInstance>() //添加 notes 表单的 ref\r\nconst notesFormRules = reactive //添加 notes 表单的 rule\r\n({\r\n    title:\r\n    [\r\n        { required: true, message: t(\"rules.title\"), trigger: 'blur' },\r\n    ],\r\n    text:\r\n    [\r\n        { required: true, message: t(\"rules.content\"), trigger: 'blur' },\r\n    ],\r\n})\r\nconst notesEditUuid = ref(\"\") //修改的note uuid\r\nconst notesDeleteUuid = ref(\"\") //当前删除的note uuid\r\nconst notesDeleteTitle = ref(\"\") //当前删除的note 标题\r\n\r\nconst getNotesData = async () => //获取笔记列表\r\n{\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            searchInput: searchInput.value,\r\n            page: page.value,\r\n        }\r\n        const resp = await getNotesManageList(params)\r\n        pageTotal.value = resp.data.total\r\n        tableData.value = resp.data.notesList\r\n    } catch {}\r\n}\r\n\r\nonMounted( () =>\r\n{\r\n    getNotesData()\r\n})\r\n\r\nconst clickSearch = () => //点击搜索\r\n{\r\n    getNotesData()\r\n}\r\n\r\nconst pageChange = () => //翻页\r\n{\r\n    getNotesData()\r\n}\r\n\r\nconst clickEdit = (row:any) => //点击编辑按钮\r\n{\r\n    notesForm.title = row.title\r\n    notesForm.text = row.text\r\n    isEditDrawerOpen.value = true\r\n    notesEditUuid.value = row.uuid\r\n}\r\n\r\nconst doUpdatenote = async () => //修改 notes\r\n{\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            uuid: notesEditUuid.value,\r\n            title: notesForm.title,\r\n            text: notesForm.text,\r\n        }\r\n        const resp = await updateNote(params)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.submitSuccess\"),\r\n                type: 'success',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.nameHasBeenUsed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n        getNotesData()\r\n        isEditDrawerOpen.value = false\r\n    } catch {}\r\n}\r\n\r\nconst clickUpdateNote = async (formEl: FormInstance | undefined) => //点击修改 notes 提交\r\n{\r\n    if (!formEl) return\r\n    await formEl.validate((valid, fields) => {\r\n        if (valid) {\r\n            doUpdatenote()\r\n        } else {\r\n            console.log('error submit!', fields)\r\n        }\r\n    })\r\n}\r\n\r\nconst clickDelete = (row:any) => //点击删除 note\r\n{\r\n    notesDeleteTitle.value = row.title\r\n    notesDeleteUuid.value = row.uuid\r\n    isDeleteConfirmDrawerOpen.value = true\r\n}\r\n\r\nconst clickCancelDelete = () => //点击取消删除 note\r\n{\r\n    notesDeleteUuid.value = \"\"\r\n    isDeleteConfirmDrawerOpen.value = false\r\n}\r\n\r\nconst doDeleteNote = async () => \r\n{\r\n    try\r\n    {\r\n        const params = \r\n        {\r\n            uuid: notesDeleteUuid.value\r\n        }\r\n        const resp = await deleteNoteData(params)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.deleteSuccess\"),\r\n                type: 'success',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.deleteFailed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n        notesDeleteUuid.value = \"\"\r\n        isDeleteConfirmDrawerOpen.value = false\r\n        getNotesData()\r\n    } catch {}\r\n}\r\n\r\nconst onWindowSizeChanged = () => //窗口大小变动\r\n{\r\n    tableHeight.value = (window.innerHeight - 280) + \"px\"\r\n}\r\n\r\nwindow.addEventListener('resize',onWindowSizeChanged) //监听窗口变动\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_search = _resolveComponent(\"search\")!\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_table_column = _resolveComponent(\"el-table-column\")!\n  const _component_MessageBox = _resolveComponent(\"MessageBox\")!\n  const _component_Delete = _resolveComponent(\"Delete\")!\n  const _component_el_table = _resolveComponent(\"el-table\")!\n  const _component_el_pagination = _resolveComponent(\"el-pagination\")!\n  const _component_el_card = _resolveComponent(\"el-card\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_CircleCheckFilled = _resolveComponent(\"CircleCheckFilled\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n  const _component_el_drawer = _resolveComponent(\"el-drawer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_el_card, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_el_input, {\n          modelValue: searchInput.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchInput).value = $event)),\n          placeholder: \"search\",\n          class: \"notes-manage-search-input\",\n          clearable: \"\"\n        }, {\n          append: _withCtx(() => [\n            _createVNode(_component_el_button, { onClick: clickSearch }, {\n              default: _withCtx(() => [\n                _createVNode(_component_el_icon, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_search)\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"modelValue\"]),\n        _createVNode(_component_el_table, {\n          data: tableData.value,\n          height: tableHeight.value\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_table_column, {\n              prop: \"uuid\",\n              width: \"200\"\n            }, {\n              header: _withCtx(() => [\n                _createTextVNode(\" ID \")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, {\n              prop: \"title\",\n              width: \"100\"\n            }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"common.title\")), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, {\n              prop: \"text\",\n              width: \"200\"\n            }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"common.content\")), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, { prop: \"username\" }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"static.userBelongs\")), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, { prop: \"createTime\" }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"common.createTime\")), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, {\n              prop: \"isDeleted\",\n              width: \"60\"\n            }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"common.state\")), 1)\n              ]),\n              default: _withCtx((scope) => [\n                (scope.row.isDeleted == 0)\n                  ? (_openBlock(), _createBlock(_component_el_icon, {\n                      key: 0,\n                      style: {\"color\":\"#67C23A\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_MessageBox)\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (scope.row.isDeleted == 1)\n                  ? (_openBlock(), _createBlock(_component_el_icon, {\n                      key: 1,\n                      style: {\"color\":\"#F56C6C\"}\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_Delete)\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_table_column, {\n              fixed: \"right\",\n              label: \"Operations\",\n              width: \"120\"\n            }, {\n              header: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"common.operations\")), 1)\n              ]),\n              default: _withCtx((scope) => [\n                _createVNode(_component_el_button, {\n                  link: \"\",\n                  type: \"primary\",\n                  onClick: ($event: any) => (clickEdit(scope.row))\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t(\"common.edit\")), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"]),\n                _createVNode(_component_el_button, {\n                  link: \"\",\n                  type: \"danger\",\n                  onClick: ($event: any) => (clickDelete(scope.row))\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t(\"common.delete\")), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"data\", \"height\"]),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_el_pagination, {\n            layout: \"prev, pager, next\",\n            \"current-page\": page.value,\n            \"onUpdate:currentPage\": _cache[1] || (_cache[1] = ($event: any) => ((page).value = $event)),\n            onCurrentChange: _cache[2] || (_cache[2] = ($event: any) => (pageChange())),\n            \"page-size\": 20,\n            total: pageTotal.value,\n            \"pager-count\": 5,\n            background: \"\"\n          }, null, 8, [\"current-page\", \"total\"])\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_el_drawer, {\n      modelValue: isEditDrawerOpen.value,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((isEditDrawerOpen).value = $event))\n    }, {\n      header: _withCtx(() => [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_ctx.$t(\"static.editNote\")), 1)\n      ]),\n      default: _withCtx(() => [\n        _createVNode(_component_el_form, {\n          ref_key: \"notesFormRef\",\n          ref: notesFormRef,\n          model: notesForm,\n          rules: notesFormRules\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_form_item, { prop: \"title\" }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"common.title\")), 1),\n                _createVNode(_component_el_input, {\n                  modelValue: notesForm.title,\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((notesForm.title) = $event)),\n                  maxlength: \"50\",\n                  \"show-word-limit\": \"\",\n                  clearable: \"\"\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_form_item, { prop: \"text\" }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"common.content\")), 1),\n                _createVNode(_component_el_input, {\n                  modelValue: notesForm.text,\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((notesForm.text) = $event)),\n                  rows: 2,\n                  type: \"textarea\",\n                  maxlength: \"300\",\n                  \"show-word-limit\": \"\",\n                  clearable: \"\",\n                  autosize: { minRows: 6 }\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_form_item, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_el_button, {\n                  onClick: _cache[5] || (_cache[5] = ($event: any) => (clickUpdateNote(notesFormRef.value))),\n                  type: \"success\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_icon, {\n                      class: \"notes-manage-submit-button-icon\",\n                      size: \"15\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_CircleCheckFilled)\n                      ]),\n                      _: 1\n                    }),\n                    _createTextVNode(\" \" + _toDisplayString(_ctx.$t(\"common.submit\")), 1)\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"model\", \"rules\"])\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createVNode(_component_el_drawer, {\n      modelValue: isDeleteConfirmDrawerOpen.value,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((isDeleteConfirmDrawerOpen).value = $event)),\n      direction: \"ttb\"\n    }, {\n      header: _withCtx(() => [\n        _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"common.warning\")), 1)\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.$t(\"static.reallyToDeleteDataConfirm\")), 1),\n          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(notesDeleteTitle.value), 1)\n        ])\n      ]),\n      footer: _withCtx(() => [\n        _createVNode(_component_el_button, {\n          type: \"info\",\n          plain: \"\",\n          onClick: _cache[7] || (_cache[7] = ($event: any) => (clickCancelDelete()))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"common.no\")), 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_el_button, {\n          type: \"danger\",\n          onClick: _cache[8] || (_cache[8] = ($event: any) => (doDeleteNote()))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"common.yes\")), 1)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"])\n  ], 64))\n}\n}\n\n})","<template>\r\n    <el-card>\r\n        <el-input\r\n        v-model=\"searchInput\"\r\n        placeholder=\"search\"\r\n        class=\"notes-manage-search-input\"\r\n        clearable\r\n        >\r\n            <template #append>\r\n                <el-button @click=\"clickSearch\">\r\n                    <el-icon>\r\n                        <search/>\r\n                    </el-icon>\r\n                </el-button>\r\n            </template>\r\n        </el-input>\r\n        <el-table :data=\"tableData\" :height=\"tableHeight\">\r\n            <el-table-column prop=\"uuid\" width=\"200\">\r\n                <template #header>\r\n                    ID\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"title\" width=\"100\">\r\n                <template #header>\r\n                    {{ $t(\"common.title\") }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"text\" width=\"200\">\r\n                <template #header>\r\n                    {{ $t(\"common.content\") }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"username\">\r\n                <template #header>\r\n                    {{ $t(\"static.userBelongs\") }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"createTime\">\r\n                <template #header>\r\n                    {{ $t(\"common.createTime\") }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"isDeleted\" width=\"60\">\r\n                <template #header>\r\n                    {{ $t(\"common.state\") }}\r\n                </template>\r\n                <template #default=\"scope\">\r\n                    <el-icon v-if=\"scope.row.isDeleted == 0\" style=\"color: #67C23A;\"><MessageBox/></el-icon>\r\n                    <el-icon v-if=\"scope.row.isDeleted == 1\" style=\"color: #F56C6C;\"><Delete/></el-icon>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"Operations\" width=\"120\">\r\n                <template #header>\r\n                    {{ $t(\"common.operations\") }}\r\n                </template>\r\n                <template #default=\"scope\">\r\n                    <el-button link type=\"primary\" @click=\"clickEdit(scope.row)\">{{ $t(\"common.edit\") }}</el-button>\r\n                    <el-button link type=\"danger\" @click=\"clickDelete(scope.row)\">{{ $t(\"common.delete\") }}</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div class=\"notes-manage-pagination-div\">\r\n            <el-pagination layout=\"prev, pager, next\" v-model:current-page=\"page\" @current-change=\"pageChange()\" :page-size=\"20\" :total=\"pageTotal\" :pager-count=\"5\" background />\r\n        </div>\r\n    </el-card>\r\n    <el-drawer v-model=\"isEditDrawerOpen\">\r\n        <template #header>\r\n            <span class=\"notes-manage-drawer-title\">{{ $t(\"static.editNote\") }}</span>\r\n        </template>\r\n        <el-form ref=\"notesFormRef\" :model=\"notesForm\" :rules=\"notesFormRules\">\r\n            <el-form-item prop=\"title\">\r\n                <h1>{{ $t(\"common.title\") }}</h1>\r\n                <el-input v-model=\"notesForm.title\" maxlength=\"50\" show-word-limit clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"text\">\r\n                <h1>{{ $t(\"common.content\") }}</h1>\r\n                <el-input v-model=\"notesForm.text\" :rows=\"2\" type=\"textarea\" maxlength=\"300\" show-word-limit clearable :autosize=\"{ minRows: 6 }\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button @click=\"clickUpdateNote(notesFormRef)\" type=\"success\">\r\n                    <el-icon class=\"notes-manage-submit-button-icon\" size=\"15\">\r\n                        <CircleCheckFilled/>\r\n                    </el-icon>\r\n                    {{ $t(\"common.submit\") }}\r\n                </el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-drawer>\r\n    <el-drawer v-model=\"isDeleteConfirmDrawerOpen\" direction=\"ttb\">\r\n        <template #header>\r\n            <h1>{{ $t(\"common.warning\") }}</h1>\r\n        </template>\r\n        <template #default>\r\n            <div class=\"notes-manage-delete-confirm-div\">\r\n                <div class=\"notes-manage-delete-confirm-text\">{{ $t(\"static.reallyToDeleteDataConfirm\") }}</div>\r\n                <div class=\"notes-manage-delete-confirm-title\">{{ notesDeleteTitle }}</div>\r\n            </div>\r\n        </template>\r\n        <template #footer>\r\n            <el-button type=\"info\" plain @click=\"clickCancelDelete()\">{{ $t(\"common.no\") }}</el-button>\r\n            <el-button type=\"danger\" @click=\"doDeleteNote()\">{{ $t(\"common.yes\") }}</el-button>\r\n        </template>\r\n    </el-drawer>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref,onMounted,reactive } from 'vue'\r\nimport { getNotesManageList,updateNote,deleteNoteData } from '@/axios/api/notes';\r\nimport type { FormInstance } from 'element-plus'\r\nimport { ElMessage } from 'element-plus' //element消息\r\nimport i18n from '@/language';\r\nconst { t } = i18n.global\r\n\r\nconst searchInput = ref(\"\") //搜索内容输入\r\nconst tableData = ref([]) //主页面表表格数据\r\nconst page = ref(1) //页数\r\nconst pageTotal = ref(0) //总条数\r\nconst tableHeight = ref((window.innerHeight - 280) + \"px\") //表格高度\r\nconst isEditDrawerOpen = ref(false) //编辑抽屉是否打开\r\nconst isDeleteConfirmDrawerOpen = ref(false) //确认删除的抽屉是否打开\r\nconst notesForm = reactive //接口数据输入\r\n({\r\n    title: \"\",\r\n    text: \"\",\r\n})\r\nconst notesFormRef = ref<FormInstance>() //添加 notes 表单的 ref\r\nconst notesFormRules = reactive //添加 notes 表单的 rule\r\n({\r\n    title:\r\n    [\r\n        { required: true, message: t(\"rules.title\"), trigger: 'blur' },\r\n    ],\r\n    text:\r\n    [\r\n        { required: true, message: t(\"rules.content\"), trigger: 'blur' },\r\n    ],\r\n})\r\nconst notesEditUuid = ref(\"\") //修改的note uuid\r\nconst notesDeleteUuid = ref(\"\") //当前删除的note uuid\r\nconst notesDeleteTitle = ref(\"\") //当前删除的note 标题\r\n\r\nconst getNotesData = async () => //获取笔记列表\r\n{\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            searchInput: searchInput.value,\r\n            page: page.value,\r\n        }\r\n        const resp = await getNotesManageList(params)\r\n        pageTotal.value = resp.data.total\r\n        tableData.value = resp.data.notesList\r\n    } catch {}\r\n}\r\n\r\nonMounted( () =>\r\n{\r\n    getNotesData()\r\n})\r\n\r\nconst clickSearch = () => //点击搜索\r\n{\r\n    getNotesData()\r\n}\r\n\r\nconst pageChange = () => //翻页\r\n{\r\n    getNotesData()\r\n}\r\n\r\nconst clickEdit = (row:any) => //点击编辑按钮\r\n{\r\n    notesForm.title = row.title\r\n    notesForm.text = row.text\r\n    isEditDrawerOpen.value = true\r\n    notesEditUuid.value = row.uuid\r\n}\r\n\r\nconst doUpdatenote = async () => //修改 notes\r\n{\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            uuid: notesEditUuid.value,\r\n            title: notesForm.title,\r\n            text: notesForm.text,\r\n        }\r\n        const resp = await updateNote(params)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.submitSuccess\"),\r\n                type: 'success',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.nameHasBeenUsed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n        getNotesData()\r\n        isEditDrawerOpen.value = false\r\n    } catch {}\r\n}\r\n\r\nconst clickUpdateNote = async (formEl: FormInstance | undefined) => //点击修改 notes 提交\r\n{\r\n    if (!formEl) return\r\n    await formEl.validate((valid, fields) => {\r\n        if (valid) {\r\n            doUpdatenote()\r\n        } else {\r\n            console.log('error submit!', fields)\r\n        }\r\n    })\r\n}\r\n\r\nconst clickDelete = (row:any) => //点击删除 note\r\n{\r\n    notesDeleteTitle.value = row.title\r\n    notesDeleteUuid.value = row.uuid\r\n    isDeleteConfirmDrawerOpen.value = true\r\n}\r\n\r\nconst clickCancelDelete = () => //点击取消删除 note\r\n{\r\n    notesDeleteUuid.value = \"\"\r\n    isDeleteConfirmDrawerOpen.value = false\r\n}\r\n\r\nconst doDeleteNote = async () => \r\n{\r\n    try\r\n    {\r\n        const params = \r\n        {\r\n            uuid: notesDeleteUuid.value\r\n        }\r\n        const resp = await deleteNoteData(params)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.deleteSuccess\"),\r\n                type: 'success',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.deleteFailed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n        notesDeleteUuid.value = \"\"\r\n        isDeleteConfirmDrawerOpen.value = false\r\n        getNotesData()\r\n    } catch {}\r\n}\r\n\r\nconst onWindowSizeChanged = () => //窗口大小变动\r\n{\r\n    tableHeight.value = (window.innerHeight - 280) + \"px\"\r\n}\r\n\r\nwindow.addEventListener('resize',onWindowSizeChanged) //监听窗口变动\r\n</script>\r\n\r\n<style>\r\n@import '@/css/common.css';\r\n\r\n.notes-manage-search-input\r\n{\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.notes-manage-add-button\r\n{\r\n    width: 100%;\r\n    margin-top: 20px;\r\n}\r\n\r\n.notes-manage-pagination-div\r\n{\r\n    margin-top: 20px;\r\n}\r\n\r\n.notes-manage-drawer-title\r\n{\r\n    font-weight: bold;\r\n}\r\n\r\n.notes-manage-delete-confirm-div\r\n{\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.notes-manage-delete-confirm-text\r\n{\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n}\r\n\r\n.notes-manage-delete-confirm-title\r\n{\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.notes-manage-submit-button-icon\r\n{\r\n    margin-right: 10px;\r\n}\r\n</style>","import script from \"./NotesManage.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./NotesManage.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./NotesManage.vue?vue&type=style&index=0&id=0501bbab&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getNotesManageList","params","get","updateNote","post","getNotesListByUser","addNote","deleteNote","deleteNoteData","editNote","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","t","i18n","global","searchInput","ref","tableData","page","pageTotal","tableHeight","window","innerHeight","isEditDrawerOpen","isDeleteConfirmDrawerOpen","notesForm","reactive","title","text","notesFormRef","notesFormRules","required","message","trigger","notesEditUuid","notesDeleteUuid","notesDeleteTitle","getNotesData","async","value","resp","data","total","notesList","onMounted","clickSearch","pageChange","clickEdit","row","uuid","doUpdatenote","code","ElMessage","type","clickUpdateNote","formEl","validate","valid","fields","console","log","clickDelete","clickCancelDelete","doDeleteNote","onWindowSizeChanged","addEventListener","_ctx","_cache","_component_search","_resolveComponent","_component_el_icon","_component_el_button","_component_el_input","_component_el_table_column","_component_MessageBox","_component_Delete","_component_el_table","_component_el_pagination","_component_el_card","_component_el_form_item","_component_CircleCheckFilled","_component_el_form","_component_el_drawer","_openBlock","_createElementBlock","_Fragment","_createVNode","default","_withCtx","modelValue","$event","placeholder","clearable","append","onClick","_","height","prop","width","header","_createTextVNode","_toDisplayString","$t","scope","isDeleted","_createBlock","key","style","_createCommentVNode","fixed","label","link","_createElementVNode","layout","onCurrentChange","background","ref_key","model","rules","maxlength","rows","autosize","minRows","size","direction","footer","plain","__exports__"],"sourceRoot":""}