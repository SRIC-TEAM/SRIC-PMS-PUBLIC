{"version":3,"file":"js/724.b20e6bb2.js","mappings":"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","sources":["webpack://front/./src/axios/api/resources.ts","webpack://front/./src/tools/staticResources.ts","webpack://front/./src/views/manage/ResourcesUpload.vue?eec5","webpack://front/./src/views/manage/ResourcesUpload.vue","webpack://front/./src/views/manage/ResourcesUpload.vue?6235"],"sourcesContent":["import { downloadFile, get,post, postForm } from '@/axios/axios'\r\n\r\nexport function getResourcesCategoryManageDataList(params:any)\r\n{\r\n    return get('/resourcesManage/getResourcesCategoryManageDataList',params)\r\n}\r\n\r\nexport function getResourcesCategoryList(params:any)\r\n{\r\n    return get('/resources/getResourcesCategoryList',params)\r\n}\r\n\r\nexport function addOrUpdateResourcesCategory(params:any)\r\n{\r\n    return post('/resourcesManage/addOrUpdateResourcesCategory',params)\r\n}\r\n\r\nexport function getResourcesManageList(params:any)\r\n{\r\n    return get('/resourcesManage/getResourcesManageList',params)\r\n}\r\n\r\nexport function editResourcesMessage(params:any)\r\n{\r\n    return post('/resourcesManage/editResourcesMessage',params)\r\n}\r\n\r\nexport function checkResourcesName(params:any)\r\n{\r\n    return get('/resourcesManage/checkResourcesName',params)\r\n}\r\n\r\nexport function uploadResources(params: any,file: File)\r\n{\r\n    return postForm('/resourcesManage/uploadResources',params,file)\r\n}\r\n\r\nexport function getResourcesList(params: any)\r\n{\r\n    return get('/resources/getResourcesList',params)\r\n}\r\n\r\nexport function downloadResources(params: any)\r\n{\r\n    return downloadFile('/resources/downloadResources',params)\r\n}","export const levels = \r\n[\r\n    {\r\n        value: '1',\r\n        label: '#c93f38',\r\n    },\r\n    {\r\n        value: '2',\r\n        label: '#e56e24',\r\n    },\r\n    {\r\n        value: '3',\r\n        label: '#eec400',\r\n    },\r\n    {\r\n        value: '4',\r\n        label: '#a59344',\r\n    },\r\n    {\r\n        value: '5',\r\n        label: '#76b583',\r\n    },\r\n    {\r\n        value: '6',\r\n        label: '#008a60',\r\n    },\r\n    {\r\n        value: '7',\r\n        label: '#65a7dd',\r\n    },\r\n    {\r\n        value: '8',\r\n        label: '#00035b',\r\n    },\r\n    {\r\n        value: '9',\r\n        label: '#7249d6',\r\n    },\r\n    {\r\n        value: '10',\r\n        label: '#9c52f2',\r\n    },\r\n]","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"common-body-set-width\" }\nconst _hoisted_2 = { class: \"resources-upload-title-div\" }\nconst _hoisted_3 = { class: \"resources-upload-back-button-text\" }\nconst _hoisted_4 = { class: \"resources-upload-title-h1\" }\nconst _hoisted_5 = { class: \"el-upload__text\" }\nconst _hoisted_6 = { class: \"resources-upload-tip\" }\n\nimport { ref,reactive,onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\n\r\nimport { uploadResources,checkResourcesName,getResourcesCategoryManageDataList } from \"@/axios/api/resources\"\r\nimport { levels } from '@/tools/staticResources' //引入权限静态数据\r\nimport { genFileId } from 'element-plus'\r\nimport type { UploadInstance, UploadProps, UploadRawFile, UploadUserFile } from 'element-plus'\r\nimport type { FormInstance } from 'element-plus'\r\nimport { ElMessage } from 'element-plus' //element消息\r\nimport i18n from '@/language';\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ResourcesUpload',\n  setup(__props) {\n\r\nconst { t } = i18n.global\r\n\r\nconst router = useRouter()\r\n\r\nconst isUploadButtonLoading = ref(false) //上传按钮是否在加载中\r\n\r\nconst uploadRef = ref<UploadInstance>() //upload 组件的 ref\r\n\r\nconst fileList = ref<UploadUserFile[]>([]); //储存每次上传的文件对象和数据 (目前仅用于鉴定上传是否为空)\r\n\r\nconst resourcesUploadForm = reactive //数据输入\r\n({\r\n    name: \"\",\r\n    level: \"\",\r\n    category: \"\",\r\n})\r\nconst resourcesUploadFormRef = ref<FormInstance>() //添加 resourcesUpload 表单的 ref\r\nconst resourcesUploadFormRules = reactive //添加 resourcesUpload 表单的 rule\r\n({\r\n    name:\r\n    [\r\n        { required: true, message: t(\"rules.name\"), trigger: 'blur' },\r\n    ],\r\n    level:\r\n    [\r\n        { required: true, message: t(\"rules.permissionLevel\"), trigger: 'blur' },\r\n    ],\r\n    category:\r\n    [\r\n        { required: true, message: t(\"rules.category\"), trigger: 'blur' },\r\n    ],\r\n})\r\nconst resourcesCategoryList = ref<{ id: string; name: string }[]>([]) //资源类别列表\r\n\r\nconst clickBack = () =>\r\n{\r\n    router.push\r\n    ({\r\n        name: 'ResourcesManage',\r\n        path: '/ResourcesManage',\r\n    })\r\n}\r\n\r\nconst getResourcesCategoryData = async () => //获取类别列表\r\n{\r\n    try\r\n    {\r\n        const resp = await getResourcesCategoryManageDataList({})\r\n        resourcesCategoryList.value = resp.data\r\n    } catch {}\r\n}\r\n\r\nonMounted( () =>\r\n{\r\n    getResourcesCategoryData()\r\n})\r\n\r\nconst handleExceed: UploadProps['onExceed'] = (files) => //在上传新文件时 (仅允许上传一个文件 触发超出限制时，执行的钩子函数) 替换文件\r\n{\r\n    uploadRef.value?.clearFiles()\r\n    const file = files[0] as UploadRawFile\r\n    file.uid = genFileId()\r\n    uploadRef.value?.handleStart(file)\r\n}\r\n\r\nconst clickUploadFile = async (formEl: FormInstance | undefined) => //点击上传 判断上传文件不为空,表单验证通过 触发上传请求\r\n{\r\n    if (!fileList.value.length) //判断文件是否为空\r\n    {\r\n        ElMessage({\r\n            message: t(\"static.pleaseUploadFile\"),\r\n            type: 'warning',\r\n        })\r\n        return;\r\n    }\r\n    try //判断文件名称是否重复\r\n    {\r\n        const params =\r\n        {\r\n            name: resourcesUploadForm.name,\r\n        }\r\n        const resp = await checkResourcesName(params)\r\n        if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.nameHasBeenUsed\"),\r\n                type: 'warning',\r\n            })\r\n            return\r\n        }\r\n    } catch {}\r\n    if (!formEl) return //表单验证\r\n    await formEl.validate((valid, fields) => {\r\n        if (valid) {\r\n            uploadRef.value?.submit()\r\n        } else {\r\n            console.log('error submit!', fields)\r\n        }\r\n    })\r\n}\r\n\r\nconst uploadFileToServer = async (options) => //上传请求\r\n{\r\n    isUploadButtonLoading.value = true\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            name: resourcesUploadForm.name,\r\n            level: resourcesUploadForm.level,\r\n            category: resourcesUploadForm.category,\r\n        }\r\n        const resp = await uploadResources(params,options.file)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.uploadSuccess\"),\r\n                type: 'success',\r\n            })\r\n            router.push\r\n            ({\r\n                name: 'ResourcesManage',\r\n                path: '/ResourcesManage',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.uploadFailed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n    } catch {}\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Back = _resolveComponent(\"Back\")!\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_tag = _resolveComponent(\"el-tag\")!\n  const _component_el_option = _resolveComponent(\"el-option\")!\n  const _component_el_select = _resolveComponent(\"el-select\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n  const _component_upload_filled = _resolveComponent(\"upload-filled\")!\n  const _component_el_upload = _resolveComponent(\"el-upload\")!\n  const _component_CircleCheckFilled = _resolveComponent(\"CircleCheckFilled\")!\n  const _component_el_card = _resolveComponent(\"el-card\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_el_card, null, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode(_component_el_button, {\n            type: \"info\",\n            onClick: clickBack,\n            plain: \"\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_icon, { size: \"20\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_Back)\n                ]),\n                _: 1\n              }),\n              _createElementVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.$t(\"common.back\")), 1)\n            ]),\n            _: 1\n          }),\n          _createElementVNode(\"h1\", _hoisted_4, _toDisplayString(_ctx.$t(\"static.uploadResourcesFile\")), 1)\n        ]),\n        _createVNode(_component_el_form, {\n          ref_key: \"resourcesUploadFormRef\",\n          ref: resourcesUploadFormRef,\n          model: resourcesUploadForm,\n          rules: resourcesUploadFormRules\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_form_item, { prop: \"name\" }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"common.name\")), 1),\n                _createVNode(_component_el_input, {\n                  modelValue: resourcesUploadForm.name,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((resourcesUploadForm.name) = $event)),\n                  maxlength: \"30\",\n                  \"show-word-limit\": \"\",\n                  clearable: \"\"\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_form_item, { prop: \"level\" }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"static.permissionLevel\")), 1),\n                _createVNode(_component_el_select, {\n                  modelValue: resourcesUploadForm.level,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((resourcesUploadForm.level) = $event))\n                }, {\n                  label: _withCtx(({ value }) => [\n                    _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t(\"static.permissionLevel\")) + \" : \" + _toDisplayString(value), 1)\n                  ]),\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(levels), (item, i) => {\n                      return (_openBlock(), _createBlock(_component_el_option, {\n                        key: i,\n                        label: item.label,\n                        value: item.value\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_el_tag, {\n                            color: item.label,\n                            class: \"resources-upload-select-color-tag\",\n                            size: \"small\"\n                          }, null, 8, [\"color\"]),\n                          _createElementVNode(\"span\", {\n                            style: _normalizeStyle({ color: item.label })\n                          }, _toDisplayString(_ctx.$t(\"static.permissionLevel\")) + \" : \" + _toDisplayString(item.value), 5)\n                        ]),\n                        _: 2\n                      }, 1032, [\"label\", \"value\"]))\n                    }), 128))\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_form_item, { prop: \"category\" }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"common.category\")), 1),\n                _createVNode(_component_el_select, {\n                  modelValue: resourcesUploadForm.category,\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((resourcesUploadForm.category) = $event))\n                }, {\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(resourcesCategoryList.value, (item, i) => {\n                      return (_openBlock(), _createBlock(_component_el_option, {\n                        key: i,\n                        label: item.name,\n                        value: item.id\n                      }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"span\", {\n                            style: _normalizeStyle({ color: item.name })\n                          }, _toDisplayString(item.name), 5)\n                        ]),\n                        _: 2\n                      }, 1032, [\"label\", \"value\"]))\n                    }), 128))\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"model\", \"rules\"]),\n        _createVNode(_component_el_upload, {\n          class: \"resources-upload-el-upload\",\n          ref_key: \"uploadRef\",\n          ref: uploadRef,\n          \"file-list\": fileList.value,\n          \"onUpdate:fileList\": _cache[3] || (_cache[3] = ($event: any) => ((fileList).value = $event)),\n          drag: \"\",\n          action: \"\",\n          \"auto-upload\": false,\n          limit: 1,\n          \"on-exceed\": handleExceed,\n          \"http-request\": uploadFileToServer\n        }, {\n          tip: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.$t(\"static.newFileWillCover\")), 1)\n          ]),\n          default: _withCtx(() => [\n            _createVNode(_component_el_icon, { class: \"el-icon--upload\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_upload_filled)\n              ]),\n              _: 1\n            }),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createTextVNode(_toDisplayString(_ctx.$t(\"static.dropFileHere\")) + \" \" + _toDisplayString(_ctx.$t(\"common.or\")) + \" \", 1),\n              _createElementVNode(\"em\", null, _toDisplayString(_ctx.$t(\"static.clickToUpload\")), 1)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"file-list\"]),\n        _createVNode(_component_el_button, {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (clickUploadFile(resourcesUploadFormRef.value))),\n          type: \"success\",\n          loading: isUploadButtonLoading.value\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_icon, {\n              class: \"resources-upload-submit-button-icon\",\n              size: \"15\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_CircleCheckFilled)\n              ]),\n              _: 1\n            }),\n            _createTextVNode(\" \" + _toDisplayString(_ctx.$t(\"common.submit\")), 1)\n          ]),\n          _: 1\n        }, 8, [\"loading\"])\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"common-body-set-width\">\r\n        <el-card>\r\n            <div class=\"resources-upload-title-div\">\r\n                <el-button type=\"info\" @click=\"clickBack\" plain>\r\n                    <el-icon size=\"20\">\r\n                        <Back/>\r\n                    </el-icon>\r\n                    <p class=\"resources-upload-back-button-text\">{{ $t(\"common.back\") }}</p>\r\n                </el-button>\r\n                <h1 class=\"resources-upload-title-h1\">{{ $t(\"static.uploadResourcesFile\") }}</h1>\r\n            </div>\r\n            <el-form ref=\"resourcesUploadFormRef\" :model=\"resourcesUploadForm\" :rules=\"resourcesUploadFormRules\">\r\n                <el-form-item prop=\"name\">\r\n                    <h1>{{ $t(\"common.name\") }}</h1>\r\n                    <el-input v-model=\"resourcesUploadForm.name\" maxlength=\"30\" show-word-limit clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"level\">\r\n                    <h1>{{ $t(\"static.permissionLevel\") }}</h1>\r\n                    <el-select v-model=\"resourcesUploadForm.level\">\r\n                        <el-option v-for=\"(item,i) in levels\" :key=\"i\" :label=\"item.label\" :value=\"item.value\">\r\n                            <el-tag :color=\"item.label\" class=\"resources-upload-select-color-tag\" size=\"small\" />\r\n                            <span :style=\"{ color: item.label }\">{{ $t(\"static.permissionLevel\") }} : {{ item.value }}</span>\r\n                        </el-option>\r\n                        <template #label=\"{ value }\">\r\n                            <span>{{ $t(\"static.permissionLevel\") }} : {{ value }}</span>\r\n                        </template>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item prop=\"category\">\r\n                    <h1>{{ $t(\"common.category\") }}</h1>\r\n                    <el-select v-model=\"resourcesUploadForm.category\">\r\n                        <el-option v-for=\"(item,i) in resourcesCategoryList\" :key=\"i\" :label=\"item.name\" :value=\"item.id\">\r\n                            <span :style=\"{ color: item.name }\">{{ item.name }}</span>\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-upload\r\n                class=\"resources-upload-el-upload\"\r\n                ref=\"uploadRef\"\r\n                v-model:file-list=\"fileList\"\r\n                drag\r\n                action=\"\"\r\n                :auto-upload=\"false\"\r\n                :limit=\"1\"\r\n                :on-exceed=\"handleExceed\"\r\n                :http-request=\"uploadFileToServer\"\r\n            >\r\n                <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n                <div class=\"el-upload__text\">\r\n                {{ $t(\"static.dropFileHere\") }} {{ $t(\"common.or\") }} <em>{{ $t(\"static.clickToUpload\") }}</em>\r\n                </div>\r\n                <template #tip>\r\n                <div class=\"resources-upload-tip\">\r\n                    {{ $t(\"static.newFileWillCover\") }}\r\n                </div>\r\n                </template>\r\n            </el-upload>\r\n            <el-button @click=\"clickUploadFile(resourcesUploadFormRef)\" type=\"success\" :loading=\"isUploadButtonLoading\">\r\n                <el-icon class=\"resources-upload-submit-button-icon\" size=\"15\">\r\n                    <CircleCheckFilled/>\r\n                </el-icon>\r\n                {{ $t(\"common.submit\") }}\r\n            </el-button>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref,reactive,onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\n\r\nimport { uploadResources,checkResourcesName,getResourcesCategoryManageDataList } from \"@/axios/api/resources\"\r\nimport { levels } from '@/tools/staticResources' //引入权限静态数据\r\nimport { genFileId } from 'element-plus'\r\nimport type { UploadInstance, UploadProps, UploadRawFile, UploadUserFile } from 'element-plus'\r\nimport type { FormInstance } from 'element-plus'\r\nimport { ElMessage } from 'element-plus' //element消息\r\nimport i18n from '@/language';\r\nconst { t } = i18n.global\r\n\r\nconst router = useRouter()\r\n\r\nconst isUploadButtonLoading = ref(false) //上传按钮是否在加载中\r\n\r\nconst uploadRef = ref<UploadInstance>() //upload 组件的 ref\r\n\r\nconst fileList = ref<UploadUserFile[]>([]); //储存每次上传的文件对象和数据 (目前仅用于鉴定上传是否为空)\r\n\r\nconst resourcesUploadForm = reactive //数据输入\r\n({\r\n    name: \"\",\r\n    level: \"\",\r\n    category: \"\",\r\n})\r\nconst resourcesUploadFormRef = ref<FormInstance>() //添加 resourcesUpload 表单的 ref\r\nconst resourcesUploadFormRules = reactive //添加 resourcesUpload 表单的 rule\r\n({\r\n    name:\r\n    [\r\n        { required: true, message: t(\"rules.name\"), trigger: 'blur' },\r\n    ],\r\n    level:\r\n    [\r\n        { required: true, message: t(\"rules.permissionLevel\"), trigger: 'blur' },\r\n    ],\r\n    category:\r\n    [\r\n        { required: true, message: t(\"rules.category\"), trigger: 'blur' },\r\n    ],\r\n})\r\nconst resourcesCategoryList = ref<{ id: string; name: string }[]>([]) //资源类别列表\r\n\r\nconst clickBack = () =>\r\n{\r\n    router.push\r\n    ({\r\n        name: 'ResourcesManage',\r\n        path: '/ResourcesManage',\r\n    })\r\n}\r\n\r\nconst getResourcesCategoryData = async () => //获取类别列表\r\n{\r\n    try\r\n    {\r\n        const resp = await getResourcesCategoryManageDataList({})\r\n        resourcesCategoryList.value = resp.data\r\n    } catch {}\r\n}\r\n\r\nonMounted( () =>\r\n{\r\n    getResourcesCategoryData()\r\n})\r\n\r\nconst handleExceed: UploadProps['onExceed'] = (files) => //在上传新文件时 (仅允许上传一个文件 触发超出限制时，执行的钩子函数) 替换文件\r\n{\r\n    uploadRef.value?.clearFiles()\r\n    const file = files[0] as UploadRawFile\r\n    file.uid = genFileId()\r\n    uploadRef.value?.handleStart(file)\r\n}\r\n\r\nconst clickUploadFile = async (formEl: FormInstance | undefined) => //点击上传 判断上传文件不为空,表单验证通过 触发上传请求\r\n{\r\n    if (!fileList.value.length) //判断文件是否为空\r\n    {\r\n        ElMessage({\r\n            message: t(\"static.pleaseUploadFile\"),\r\n            type: 'warning',\r\n        })\r\n        return;\r\n    }\r\n    try //判断文件名称是否重复\r\n    {\r\n        const params =\r\n        {\r\n            name: resourcesUploadForm.name,\r\n        }\r\n        const resp = await checkResourcesName(params)\r\n        if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.nameHasBeenUsed\"),\r\n                type: 'warning',\r\n            })\r\n            return\r\n        }\r\n    } catch {}\r\n    if (!formEl) return //表单验证\r\n    await formEl.validate((valid, fields) => {\r\n        if (valid) {\r\n            uploadRef.value?.submit()\r\n        } else {\r\n            console.log('error submit!', fields)\r\n        }\r\n    })\r\n}\r\n\r\nconst uploadFileToServer = async (options) => //上传请求\r\n{\r\n    isUploadButtonLoading.value = true\r\n    try\r\n    {\r\n        const params =\r\n        {\r\n            name: resourcesUploadForm.name,\r\n            level: resourcesUploadForm.level,\r\n            category: resourcesUploadForm.category,\r\n        }\r\n        const resp = await uploadResources(params,options.file)\r\n        if(resp.data.code == 200)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.uploadSuccess\"),\r\n                type: 'success',\r\n            })\r\n            router.push\r\n            ({\r\n                name: 'ResourcesManage',\r\n                path: '/ResourcesManage',\r\n            })\r\n        }\r\n        else if(resp.data.code == 400)\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.uploadFailed\"),\r\n                type: 'warning',\r\n            })\r\n        }\r\n        else\r\n        {\r\n            ElMessage({\r\n                message: t(\"static.paramsError\"),\r\n                type: 'error',\r\n            })\r\n        }\r\n    } catch {}\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n@import '@/css/common.css';\r\n\r\n.resources-upload-title-div\r\n{\r\n    display: flex;\r\n    align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.resources-upload-title-h1\r\n{\r\n    margin: 0px 0px 0px 20px;\r\n}\r\n\r\n.resources-upload-back-button-text\r\n{\r\n    margin-left: 5px;\r\n}\r\n\r\n.resources-upload-tip\r\n{\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n}\r\n\r\n.resources-upload-select-color-tag\r\n{\r\n    margin-right: 8px;\r\n    border: none;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.resources-upload-submit-button-icon\r\n{\r\n    margin-right: 10px;\r\n}\r\n\r\n.resources-upload-el-upload\r\n{\r\n    margin-bottom: 10px;\r\n}\r\n</style>","import script from \"./ResourcesUpload.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ResourcesUpload.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ResourcesUpload.vue?vue&type=style&index=0&id=406fbc52&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getResourcesCategoryManageDataList","params","get","getResourcesCategoryList","addOrUpdateResourcesCategory","post","getResourcesManageList","editResourcesMessage","checkResourcesName","uploadResources","file","postForm","getResourcesList","downloadResources","downloadFile","levels","value","label","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_defineComponent","__name","setup","__props","t","i18n","global","router","useRouter","isUploadButtonLoading","ref","uploadRef","fileList","resourcesUploadForm","reactive","name","level","category","resourcesUploadFormRef","resourcesUploadFormRules","required","message","trigger","resourcesCategoryList","clickBack","push","path","getResourcesCategoryData","async","resp","data","onMounted","handleExceed","files","clearFiles","uid","genFileId","handleStart","clickUploadFile","length","code","ElMessage","type","formEl","validate","valid","fields","submit","console","log","uploadFileToServer","options","_ctx","_cache","_component_Back","_resolveComponent","_component_el_icon","_component_el_button","_component_el_input","_component_el_form_item","_component_el_tag","_component_el_option","_component_el_select","_component_el_form","_component_upload_filled","_component_el_upload","_component_CircleCheckFilled","_component_el_card","_openBlock","_createElementBlock","_createVNode","default","_withCtx","_createElementVNode","onClick","plain","size","_","_toDisplayString","$t","ref_key","model","rules","prop","modelValue","$event","maxlength","clearable","_Fragment","_renderList","_unref","item","i","_createBlock","key","color","style","_normalizeStyle","id","drag","action","limit","tip","_createTextVNode","loading","__exports__"],"sourceRoot":""}